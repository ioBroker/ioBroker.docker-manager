{
    "Active": "Active",
    "Add environment variable": "Add environment variable",
    "Add mount": "Add mount",
    "Add new container": "Add new container",
    "Add new image": "Add new image",
    "Add port mapping": "Add port mapping",
    "Bridge (default)": "Bridge (default)",
    "Cancel": "Cancel",
    "Close": "Close",
    "Command": "Command",
    "Container explanation": "A Docker container, on the other hand, is a runtime instance of a Docker image. It is a lightweight, isolated environment that runs the application defined by the Docker image.\nWhen you run a Docker image, it creates a container that encapsulates the application and its dependencies, allowing it to run consistently across different environments.\nIn ioBroker notation, it is like an instance of an adapter.",
    "Container logs": "Container logs",
    "Container name": "Container name",
    "Container path": "Container path",
    "Container port": "Container port",
    "Container ports must be unique": "Container ports must be unique",
    "Container with this name already exists, please choose another one": "Container with this name already exists, please choose another one",
    "Containers": "Containers",
    "Create": "Create",
    "Create and run": "Create and run",
    "Create new container": "Create new container",
    "Created": "Created",
    "Delete": "Delete",
    "Delete container": "Delete container",
    "Delete image": "Delete image",
    "Disk usage": "Disk usage",
    "Docker explanation": "Docker is an open-source platform for automating the deployment, scaling, and management of applications in containers.\nContainers are lightweight, isolated environments that include all necessary components such as code, runtime, libraries, and configurations to run an application.\nWith Docker, developers can deliver applications consistently and portably, regardless of the underlying infrastructure.\nThis facilitates team collaboration, simplifies running applications on different systems, and improves scalability.",
    "Environment": "Environment",
    "Environment variable name": "Environment variable name",
    "Environment variable names cannot be empty": "Environment variable names cannot be empty",
    "Environment variable names must be unique": "Environment variable names must be unique",
    "Environment variable value": "Environment variable value",
    "Error": "Error",
    "Execute command in container": "Execute command in container",
    "Execute command inside container": "Execute command inside container",
    "General": "General",
    "Host": "Host",
    "Host path": "Host path",
    "Host port": "Host port",
    "Host ports must be unique": "Host ports must be unique",
    "ID": "ID",
    "If activated, container is removed after exit (cannot be used with restart policies)": "If activated, container is removed after exit (cannot be used with restart policies)",
    "Image": "Image",
    "Image ID": "Image ID",
    "Image explanation": "A Docker image is a lightweight, standalone, and executable software package that includes everything needed to run a piece of software, including the code, runtime, libraries, environment variables, and configuration files.\nThink of it as a snapshot of an application and its dependencies at a specific point in time.\nIn ioBroker notation, it is like an adapter.",
    "Image information": "Image information",
    "Image name": "Image name",
    "Image tag": "Image tag",
    "Images": "Images",
    "Information about image": "Information about image",
    "Instance is not alive": "Instance is not alive",
    "Invalid mount type": "Invalid mount type",
    "Logs": "Logs",
    "Main": "Main",
    "Mount type": "Mount type",
    "Name": "Name",
    "Network": "Network",
    "Network mode": "Network mode",
    "None": "None",
    "Please enter a container name": "Please enter a container name",
    "Please enter a container path for all mounts": "Please enter a container path for all mounts",
    "Please enter a host path for all bind mounts": "Please enter a host path for all bind mounts",
    "Please enter a valid Windows pipe path for all npipe mounts": "Please enter a valid Windows pipe path for all npipe mounts",
    "Please enter a valid container port (1-65535)": "Please enter a valid container port (1-65535)",
    "Please enter a valid host port (1-65535)": "Please enter a valid host port (1-65535)",
    "Please enter a volume name for all volume mounts": "Please enter a volume name for all volume mounts",
    "Please select a mount type for all mounts": "Please select a mount type for all mounts",
    "Please select an image": "Please select an image",
    "Ports": "Ports",
    "Press Enter to add": "Press Enter to add",
    "Protocol": "Protocol",
    "Publish all ports": "Publish all ports",
    "Pull": "Pull",
    "Pull latest version of image": "Pull latest version of image",
    "Pull new image": "Pull new image",
    "Read only": "Read only",
    "Reclaimable": "Reclaimable",
    "Reconnect to backend": "Reconnect to backend",
    "Recreate container with new image": "Recreate container with new image",
    "Remove container on stop": "Remove container on stop",
    "Remove image": "Remove image",
    "Repository": "Repository",
    "Restart": "Restart",
    "Restart container": "Restart container",
    "Security": "Security",
    "Selected image not found, please select another one": "Selected image not found, please select another one",
    "Size": "Size",
    "Source must be empty for tmpfs mounts": "Source must be empty for tmpfs mounts",
    "Start container": "Start container",
    "Status": "Status",
    "Stop": "Stop",
    "Stop container": "Stop container",
    "Tag": "Tag",
    "Total": "Total",
    "Type": "Type",
    "Uptime": "Uptime",
    "Version": "Version",
    "Volume": "Volume",
    "container": "container",
    "default": "default"
}